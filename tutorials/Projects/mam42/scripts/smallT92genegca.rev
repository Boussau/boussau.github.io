
genelist = readDataDelimitedFile("data/genelist.csv")
n_genes <- 17
for (gene in 1:n_genes) {
    data[gene] <- readDiscreteCharacterData("data/" + genelist[gene][1])
}

taxa = data[1].taxa()
n_species <- data[1].ntaxa()
n_branches <- 2 * n_species - 3

out_group = clade("Sorex")

print(taxa)
print(out_group)

topology ~ dnUniformTopology(taxa, outgroup = out_group) 
for (i in 1:n_branches) {
 bl[i] ~ dnExponential(10.0)
}
psi := treeAssembly(topology, bl)
TL := sum(bl)

kappa ~ dnExponential(0.1)

# rates across sites
rate_var ~ dnExponential(1.0)
alpha := 1.0 / rate_var
ncat <- 4
disc_rates := fnDiscretizeGamma(alpha, alpha, 4)

meangc ~ dnBeta(1.0, 1.0)
gcinvconc ~ dnExponential(1.0)
gcalpha := abs(meangc / gcinvconc)
gcbeta := abs((1-meangc) / gcinvconc)
for (gene in 1:n_genes) {
    gamma[gene] ~ dnBeta(gcalpha, gcbeta)
    Q[gene] := fnT92(kappa=kappa, gc=gamma[gene])
}

for (gene in 1:n_genes) {
    seq[gene] ~ dnPhyloCTMC(tree=psi, Q=Q[gene], siteRates=disc_rates, type="DNA" ) 
    seq[gene].clamp(data[gene])
}

my_model = model(psi)

# moves
moves = VectorMoves()
moves.append(mvNNI(topology, weight=3.0))
moves.append(mvSPR(topology, weight=3.0))
moves.append(mvScale(kappa, weight=1.0, lambda=0.1))
moves.append(mvScale(rate_var, weight=1.0))
for (i in 1:n_branches) {
   moves.append(mvScale(bl[i], weight=1.0, lambda=0.3))
}

moves.append(mvSlide(meangc, weight=1.0))
moves.append(mvScale(gcinvconc, weight=1.0))
for (gene in 1:n_genes)    {
   moves.append(mvSlide(gamma[gene], weight=1.0, delta=0.1))
}

monitors[1] = mnModel(filename="analyses/smallT92genegca.log", printgen=10, separator = TAB)
monitors[2] = mnFile(psi,filename="analyses/smallT92genegca.trees", printgen=10, separator = TAB)
monitors[3] = mnScreen(printgen=100, meangc, gcinvconc)

# Make the analysis object
analysis = mcmc(my_model, monitors, moves)
# Run the MCMC
analysis.run(20000)

treetrace = readTreeTrace("analyses/smallT92genegca.trees", treetype="non-clock", burnin=0.1)
map_tree = mccTree(treetrace, "analyses/smallT92genegca.tree")

