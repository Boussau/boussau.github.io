# number of aligned nucleotide positions
N = 878
# number of differences observed in the empirical sequences
k_obs = 11

# mutation rate per generation
u = 2e-8
# generation time
tau = 30

# give your formula for r
r = u / tau * 1e6
print(r)

T_max = 20

# number of samples we want from the posterior distribution
n_sample = 1000

# initialize the counter
count = 0

# create a vector of size n_sample, with all entries initialized at 0
T_sample = rep(0, n_sample)

# repeat until we have collected n_sample values of T
while (count < n_sample)	{

	# draw T from prior
	T = rUniform(1,0,T_max)[1]

	# compute q(r,T) for the current value of T
	# write some code here based on the formula that was derived previously
	q = (1-exp(-2*4/3*r*T))*3/4

	# draw k given T
	k = rbinomial(1,N, Probability(q))[1]

	# condition on k == k_obs (thus rejecting the sample if k is not equal to k_obs)
	if (k == k_obs)	{
		count = count + 1
		T_sample[count] = T
	}
}
# finally, write the sample to a file:
for (i in 1:n_sample)	{
	write(T_sample[i], "\n", file="apes_reject.log", append=TRUE)
}

print(mean(T_sample))

